Description: Fix some warnings reported by gcc 4.9.1
Forwarded: no
Author: Martin Buck <mbuck@debian.org>
--- a/byteswap.c
+++ b/byteswap.c
@@ -123,8 +123,8 @@
 	 * swap or copy the rest of the ZVALUE elements
 	 */
 	if (all) {
-		dest->len = (LEN)SWAP_B8_IN_LEN(&dest->len, &src->len);
-		dest->sign = (BOOL)SWAP_B8_IN_BOOL(&dest->sign, &src->sign);
+		SWAP_B8_IN_LEN(&dest->len, &src->len);
+		SWAP_B8_IN_BOOL(&dest->sign, &src->sign);
 	} else {
 		dest->len = src->len;
 		dest->sign = src->sign;
@@ -189,7 +189,7 @@
 	 * swap or copy the rest of the NUMBER elements
 	 */
 	if (all) {
-		dest->links = (long)SWAP_B8_IN_LONG(&dest->links, &src->links);
+		SWAP_B8_IN_LONG(&dest->links, &src->links);
 	} else {
 		dest->links = src->links;
 	}
@@ -253,7 +253,7 @@
 	 * swap or copy the rest of the NUMBER elements
 	 */
 	if (all) {
-		dest->links = (long)SWAP_B8_IN_LONG(&dest->links, &src->links);
+		SWAP_B8_IN_LONG(&dest->links, &src->links);
 	} else {
 		dest->links = src->links;
 	}
@@ -358,8 +358,8 @@
 	 * swap or copy the rest of the ZVALUE elements
 	 */
 	if (all) {
-		dest->len = (LEN)SWAP_B16_IN_LEN(&dest->len, &src->len);
-		dest->sign = (BOOL)SWAP_B16_IN_BOOL(&dest->sign, &src->sign);
+		SWAP_B16_IN_LEN(&dest->len, &src->len);
+		SWAP_B16_IN_BOOL(&dest->sign, &src->sign);
 	} else {
 		dest->len = src->len;
 		dest->sign = src->sign;
@@ -424,7 +424,7 @@
 	 * swap or copy the rest of the NUMBER elements
 	 */
 	if (all) {
-		dest->links = (long)SWAP_B16_IN_LONG(&dest->links, &src->links);
+		SWAP_B16_IN_LONG(&dest->links, &src->links);
 	} else {
 		dest->links = src->links;
 	}
@@ -488,7 +488,7 @@
 	 * swap or copy the rest of the NUMBER elements
 	 */
 	if (all) {
-		dest->links = (long)SWAP_B16_IN_LONG(&dest->links, &src->links);
+		SWAP_B16_IN_LONG(&dest->links, &src->links);
 	} else {
 		dest->links = src->links;
 	}
@@ -554,8 +554,8 @@
 	 * swap or copy the rest of the ZVALUE elements
 	 */
 	if (all) {
-		dest->len = (LEN)SWAP_HALF_IN_LEN(&dest->len, &src->len);
-		dest->sign = (BOOL)SWAP_HALF_IN_BOOL(&dest->sign, &src->sign);
+		SWAP_HALF_IN_LEN(&dest->len, &src->len);
+		SWAP_HALF_IN_BOOL(&dest->sign, &src->sign);
 	} else {
 		dest->len = src->len;
 		dest->sign = src->sign;
@@ -620,7 +620,7 @@
 	 * swap or copy the rest of the NUMBER elements
 	 */
 	if (all) {
-		dest->links = (long)SWAP_HALF_IN_LONG(&dest->links,&src->links);
+		SWAP_HALF_IN_LONG(&dest->links,&src->links);
 	} else {
 		dest->links = src->links;
 	}
@@ -684,7 +684,7 @@
 	 * swap or copy the rest of the NUMBER elements
 	 */
 	if (all) {
-		dest->links = (long)SWAP_HALF_IN_LONG(&dest->links,&src->links);
+		SWAP_HALF_IN_LONG(&dest->links,&src->links);
 	} else {
 		dest->links = src->links;
 	}
--- a/func.c
+++ b/func.c
@@ -1237,10 +1237,10 @@
 {
 	/* parse args */
 	switch (count) {
-	case 1: qlink(&_qone_);
-		qlink(&_qone_);
+	case 1: (void) qlink(&_qone_);
+		(void) qlink(&_qone_);
 		return itoq((long) qprimetest(vals[0], &_qone_, &_qone_));
-	case 2: qlink(&_qone_);
+	case 2: (void) qlink(&_qone_);
 		return itoq((long) qprimetest(vals[0], vals[1], &_qone_));
 	default: return itoq((long) qprimetest(vals[0], vals[1], vals[2]));
 	}
