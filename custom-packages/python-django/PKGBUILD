# Maintainer: J. Peter Mugaas <jpmugaas@suddenlink.net>
# 2.0.7 - This version does NOT support Python 2.x so we have to have
# a separate package for django 1.11.13 for Python2.
#
_realname=django
pkgbase=python-${_realname}
pkgname=("python-${_realname}")
provides=("python3-${_realname}")
conflicts=("python3-${_realname}")
replaces=("python3-${_realname}")
pkgver=3.0.5
pkgrel=1
pkgdesc="A high-level Python Web framework that encourages rapid development and clean design (msys)"
arch=('any')
url='https://www.djangoproject.com/'
license=('BSD')
depends=("python"
         "python-asgiref"
         "python-pytz"
         "python-sqlparse")
optdepends=("python-psycopg2: for PostgreSQL backend"
            "python-bcrypt: for bcrypt support"
            "python-argon2_cffi: for Argon2 support")
makedepends=("python-bcrypt"
             "python-argon2_cffi"
             "python-psycopg2"
             "python-setuptools")
options=('staticlibs' 'strip' '!debug')
#install=${_realname}3.install
source=(#"Django-${pkgver}.tar.gz"::"https://www.djangoproject.com/download/${pkgver}/tarball/"
        "${_realname}-${pkgver}.tar.gz"::https://github.com/django/django/archive/${pkgver}.tar.gz)
sha512sums=('92296ed8aabb7ea9ff22b15a99062c54ef8108f1429b947ca7f2ff482f2d04ddc74878721c9f99ecd123f299b7e46fcce3e464c8b35432cfa79c48f6f3c2ca6b')
noextract=(${_realname}-${pkgver}.tar.gz)

# Helper macros to help make tasks easier #
apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying $_patch"
    patch -Nbp1 -i "${srcdir}/$_patch"
  done
}

del_file_exists() {
  for _fname in "$@"
  do
    if [ -f $_fname ]; then
      rm -rf $_fname
    fi
  done
}
# =========================================== #

prepare() {
  [[ -d ${srcdir}/${_realname}-${pkgver} ]] && rm -rf ${srcdir}/${_realname}-${pkgver}
  tar -xzf ${srcdir}/${_realname}-${pkgver}.tar.gz -C ${srcdir} || true

  cd "${srcdir}"
  rm -rf python-build | true
  cp -rpL "${_realname}-${pkgver}" "python-build"
  # Set version for setuptools_scm
  export SETUPTOOLS_SCM_PRETEND_VERSION=${pkgver}
}

build() {
  msg "Python build for msys"
  cd "${srcdir}/python-build"
  /usr/bin/python setup.py build
}

package() {
  cd "${srcdir}/python-build"
  /usr/bin/python setup.py install --prefix=/usr \
    --root="${pkgdir}" --optimize=1 --skip-build

  install -Dm644 LICENSE "${pkgdir}/usr/share/licenses/python-${_realname}/LICENSE"

  #local PREFIX_WIN=$(cygpath -wm /usr)
  # fix python command in files
  #for _f in "${pkgdir}/usr"/bin/*.py; do
  #  sed -e "s|${PREFIX_WIN}/bin/|/usr/bin/|g" -i ${_f}
  #done
}
