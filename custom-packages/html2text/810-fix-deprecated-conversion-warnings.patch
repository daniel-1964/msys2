Substituted 'char*' with 'const char*' in needed places to avoid
'deprecated conversion from string constant to ‘char*’' warnings.
Index: html2text/sgml.C
===================================================================
--- html2text.orig/sgml.C
+++ html2text/sgml.C
@@ -61,7 +61,7 @@
 static const struct TextToInt {
   char name[8];
   int  iso8859code;
-  char *asciistr;
+  const char *asciistr;
   unsigned long unicode;
 } entities[] = {
   { "AElig",   LATIN1_AElig,  "AE",  0x00c6},
Index: html2text/HTMLParser.h
===================================================================
--- html2text.orig/HTMLParser.h
+++ html2text/HTMLParser.h
@@ -487,7 +487,7 @@ static const int END_VAR;
  /* decl const */
 public:
  int YY_HTMLParser_PARSE(YY_HTMLParser_PARSE_PARAM);
- virtual void YY_HTMLParser_ERROR(char *) YY_HTMLParser_ERROR_BODY;
+ virtual void YY_HTMLParser_ERROR(const char *) YY_HTMLParser_ERROR_BODY;
 #ifdef YY_HTMLParser_PURE
 #ifdef YY_HTMLParser_LSP_NEEDED
  virtual int  YY_HTMLParser_LEX(YY_HTMLParser_STYPE *YY_HTMLParser_LVAL,YY_HTMLParser_LTYPE *YY_HTMLParser_LLOC) YY_HTMLParser_LEX_BODY;
Index: html2text/html2text.C
===================================================================
--- html2text.orig/html2text.C
+++ html2text/html2text.C
@@ -86,7 +86,7 @@ public:
   {}
 
 private:
-  /*virtual*/ void yyerror(char *);
+  /*virtual*/ void yyerror(const char *);
   /*virtual*/ void process(const Document &);
 
   ostream &os;
@@ -96,7 +96,7 @@ private:
 };
 
 /*virtual*/ void
-MyParser::yyerror(char *p)
+MyParser::yyerror(const char *p)
 {
 
   /*
Index: html2text/HTMLParser.C
===================================================================
--- html2text.orig/HTMLParser.C
+++ html2text/HTMLParser.C
@@ -600,7 +600,7 @@ static const int END_VAR;
  /* decl const */
 public:
  int YY_HTMLParser_PARSE (YY_HTMLParser_PARSE_PARAM);
- virtual void YY_HTMLParser_ERROR(char *msg) YY_HTMLParser_ERROR_BODY;
+ virtual void YY_HTMLParser_ERROR(const char *msg) YY_HTMLParser_ERROR_BODY;
 #ifdef YY_HTMLParser_PURE
 #ifdef YY_HTMLParser_LSP_NEEDED
  virtual int  YY_HTMLParser_LEX (YY_HTMLParser_STYPE *YY_HTMLParser_LVAL,YY_HTMLParser_LTYPE *YY_HTMLParser_LLOC) YY_HTMLParser_LEX_BODY;
